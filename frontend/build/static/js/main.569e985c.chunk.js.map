{"version":3,"sources":["components/Login.js","components/headphone.png","components/LandingPage.js","components/Forms.js","components/useAuth.js","App.js","index.js"],"names":["Login","className","href","LandingPage","code","style","height","width","src","headphone","alt","spotifyAPI","SpotifyWebApi","clientId","Forms","accessToken","useState","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","useEffect","axios","post","process","PORT","then","res","console","log","data","window","history","pushState","catch","useAuth","search1","setSearch1","search2","setSearch2","playlist","setPlaylist","song1","setSong1","song2","setSong2","created","setCreated","searchResults1","setSearchResults1","searchResults2","setSearchResults2","searchTracks","body","tracks","items","map","track","smallestImage","album","images","reduce","smallest","image","artist","artists","name","artistID","id","title","url","uri","albumUrl","for","type","onChange","e","target","value","placeholder","display","Dropdown","Item","onClick","to","getRecommendations","min_energy","seed_artists","seed_genres","seed_tracks","min_popularity","recommendations","rec","err","handlePlaylist","playlistName","prompt","createPlaylist","playlistID","addTracksToPlaylist","exportPlaylist","URLSearchParams","location","search","get","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.569e985c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst AUTH_URL = \"https://accounts.spotify.com/authorize?client_id=4362dfe6f5c244dbbc69cff0883518c4&response_type=code&redirect_uri=https://songify-music.herokuapp.com/&scope=streaming%20user-read-email%20playlist-modify-public%20playlist-modify-private%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-top-read%20user-modify-playback-state%20playlist-read-private\";\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className=\"login-btn-container\">\r\n            <a href={AUTH_URL}>\r\n                <button className=\"btn btn-success btn-lg\">\r\n                    Login with Spotify\r\n                </button>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/headphone.06c1bee8.png\";","import React from 'react';\r\nimport Login from './Login';\r\nimport headphone from './headphone.png';\r\n\r\nconst LandingPage = ({ code }) => {\r\n    return (\r\n        <div className=\"landing-container\">\r\n            <div className=\"title-pic\">\r\n                <h1 className=\"landing-title\">Songify</h1>\r\n                <h3 className=\"landing-subheading\">Custom playlists based on two songs of your choice</h3>\r\n                <img className=\"headphone\" style={{height: \"360px\", width: \"360px\"}} src={headphone} alt=\"headphone\" />\r\n            </div>\r\n            \r\n            <div className=\"mt-4 login-component\">\r\n                <Login />\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage;","import React from 'react';\r\nimport useAuth from './useAuth';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport SpotifyWebApi from 'spotify-web-api-node';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\n// create new instance of Spotify API with given client credentials\r\nconst spotifyAPI = new SpotifyWebApi({\r\n    clientId: \"4362dfe6f5c244dbbc69cff0883518c4\", \r\n});\r\n\r\nconst Forms = ({code}) => {\r\n    // used for post request to server with auth code\r\n    const accessToken = useAuth(code);\r\n\r\n    const [search1, setSearch1] = useState(\"\");\r\n    const [search2, setSearch2] = useState(\"\");\r\n    const [playlist, setPlaylist] = useState([]);\r\n    const [song1, setSong1] = useState(null);\r\n    const [song2, setSong2] = useState(null);\r\n    const [created, setCreated] = useState(false);\r\n    const [searchResults1, setSearchResults1] = useState([]);\r\n    const [searchResults2, setSearchResults2] = useState([]);\r\n\r\n    const [showPlaylist, setShowPlaylist] = useState(false);\r\n    // perform a check on whether the access token is null; if not, set it\r\n    \r\n    useEffect(() => {\r\n        if (!accessToken) {\r\n            return;\r\n        }\r\n        spotifyAPI.setAccessToken(accessToken);\r\n    }, [accessToken])\r\n\r\n    // call to api based on search query; return album metadata into an array\r\n    useEffect(() => {\r\n        if (!search1) {\r\n            setPlaylist([]);\r\n            setCreated(false);\r\n            setSong1(null);\r\n            setSong2(null);\r\n        }\r\n        // testing search results\r\n        console.log(searchResults1);\r\n        spotifyAPI.searchTracks(search1).then(res => {\r\n            setSearchResults1(res.body.tracks.items.map(track => {\r\n                // return the smallest album image by cycling through all images\r\n                const smallestImage = track.album.images.reduce((smallest, image) => {\r\n                    if (image.height < smallest.height) return image\r\n                    return smallest\r\n                }, track.album.images[0])\r\n                return {\r\n                    artist: track.artists[0].name,\r\n                    artistID: track.artists[0].id,\r\n                    title: track.name,\r\n                    id: track.id,\r\n                    url: track.uri,\r\n                    albumUrl: smallestImage.url\r\n                }\r\n            })\r\n        )});\r\n\r\n    }, [search1, accessToken])\r\n    // call to api based on second search query; return album metadata into an array\r\n    useEffect(() => {\r\n        if (!search2) {\r\n            setPlaylist([]);\r\n            setCreated(false);\r\n            setSong1(null);\r\n            setSong2(null);\r\n        }\r\n        spotifyAPI.searchTracks(search2).then(res => {\r\n            setSearchResults2(res.body.tracks.items.map(track => {\r\n                // return the smallest album image by cycling through all images\r\n                const smallestImage = track.album.images.reduce((smallest, image) => {\r\n                    if (image.height < smallest.height) return image\r\n                    return smallest\r\n                }, track.album.images[0])\r\n                return {\r\n                    artist: track.artists[0].name,\r\n                    artistID: track.artists[0].id,\r\n                    title: track.name,\r\n                    id: track.id,\r\n                    url: track.uri,\r\n                    albumUrl: smallestImage.url\r\n                }\r\n            })\r\n        )});\r\n\r\n    }, [search2, accessToken])\r\n\r\n    const handlePlaylist = () => {\r\n        if (!song1 || !song2) {\r\n            setCreated(false);\r\n            setPlaylist([]);\r\n            return;\r\n        }\r\n        setCreated(true);\r\n        spotifyAPI.getRecommendations({\r\n            min_energy: 0.4,\r\n            seed_artists: [song1.artistID, song2.artistID],\r\n            seed_genres: [],\r\n            seed_tracks: [song1.id, song2.id],\r\n            min_popularity: 50\r\n        })\r\n        .then(res => {\r\n          let recommendations = res.body.tracks;\r\n          setPlaylist(recommendations.map(rec => {\r\n            \r\n            return {\r\n                artist: rec.artists[0].name,\r\n                artistID: rec.artists[0].id,\r\n                title: rec.name,\r\n                uri: rec.uri,\r\n                id: rec.id\r\n            }\r\n          }));\r\n          \r\n        })\r\n        .catch(err => {\r\n            console.log(\"Something went wrong!\", err);\r\n        })\r\n    }\r\n\r\n    const exportPlaylist = () => {\r\n        if (!song1 || !song2) {\r\n            setCreated(false);\r\n            setPlaylist([]);\r\n            return;\r\n        }\r\n        let playlistName = prompt(\"Give your playlist a name...\");\r\n        spotifyAPI.createPlaylist(playlistName, { 'description': 'My custom playlist from that cool Songify app', 'public': false })\r\n        .then(data => {\r\n            const playlistID = data.body.id;\r\n            spotifyAPI.addTracksToPlaylist(playlistID, playlist.map(track => track.uri))\r\n            .then(res => {\r\n                console.log('Added tracks to playlist!');\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"forms-container\">\r\n            <h1 className=\"landing-title\">Songify</h1>\r\n            <h3 className=\"landing-subheading\">Custom playlists based on two songs of your choice</h3>\r\n            <form className=\"search-form\">\r\n                <div className=\"form-group mt-4\">\r\n                    <label for=\"track1\">Choose Track 1</label>\r\n                    <input type=\"text\" className=\"form-control mt-3\" onChange={e => setSearch1(e.target.value)} id=\"track1\" placeholder=\"Search Spotify\"></input>\r\n                </div>\r\n                {song1 === null ?\r\n                    <div className=\"tracks-container\" style={{display: search1 === \"\" ? \"none\" : \"block\"}}>\r\n                        {searchResults1.map(tracks => (\r\n                            <Dropdown.Item href=\"#\" onClick={() => setSong1(tracks)}>\r\n                                <img src={tracks.albumUrl} style={{height: \"64px\", width: \"64px\"}} alt=\"\" />\r\n                                <h5 className=\"track-title\">{tracks.title} by </h5>\r\n                                <h5 className=\"track-artist\">{tracks.artist}</h5>\r\n                            </Dropdown.Item> \r\n                        ))}\r\n                    </div>\r\n                :\r\n                    <div className=\"chosen-song\" style={{display: (song1 !== null) ? \"block\" : \"none\"}}>\r\n                        <img src={song1.albumUrl} style={{height: \"64px\", width: \"64px\"}} alt=\"\" />\r\n                        <h5 className=\"track-title\">{song1.title} by </h5>\r\n                        <h5 className=\"track-artist\">{song1.artist}</h5>\r\n                        <button className=\"btn cancel-song\" onClick={() => setSong1(null)}>X</button>\r\n                    </div>\r\n\r\n                }\r\n                <div className=\"form-group mt-4\">\r\n                    <label for=\"track2\">Choose Track 2</label>\r\n                    <input type=\"text\" className=\"form-control mt-3\" id=\"track2\" onChange={e => setSearch2(e.target.value)} placeholder=\"Search Spotify\"></input>\r\n                </div>\r\n                {song2 === null ?\r\n                    <div className=\"tracks-container\" style={{display: search2 === \"\" ? \"none\" : \"block\"}}>\r\n                        {searchResults2.map(tracks => (\r\n                            <Dropdown.Item href=\"#\" onClick={() => setSong2(tracks)}>\r\n                                <img src={tracks.albumUrl} style={{height: \"64px\", width: \"64px\"}} alt=\"\" />\r\n                                <h5 className=\"track-title\">{tracks.title} by </h5>\r\n                                <h5 className=\"track-artist\">{tracks.artist}</h5>\r\n                            </Dropdown.Item> \r\n                        ))}\r\n                    </div>\r\n                :\r\n                    <div className=\"chosen-song\" style={{display: (song2 !== null) ? \"block\" : \"none\"}}>\r\n                        <img src={song2.albumUrl} style={{height: \"64px\", width: \"64px\"}} alt=\"\" />\r\n                        <h5 className=\"track-title\">{song2.title} by </h5>\r\n                        <h5 className=\"track-artist\">{song2.artist}</h5>\r\n                        <button className=\"btn cancel-song\" onClick={() => setSong2(null)}>X</button>\r\n                    </div>\r\n\r\n                }\r\n                \r\n                \r\n                <Link to=\"/\">\r\n                    <button type=\"submit\" onClick={() => handlePlaylist()} className=\"btn btn-success mt-3\">Create Playlist</button>\r\n                </Link>\r\n                {((song1 !== null) && (song2 !== null) && (playlist !== [])) ?\r\n                    <div>\r\n                        <div className=\"playlist-container\">\r\n                            {playlist.map(track => (\r\n                                <div key={track.id}>\r\n                                    <h5 className=\"track-title\">{track.title} by </h5>\r\n                                    <h5 className=\"track-artist\">{track.artist}</h5>\r\n                                </div>\r\n                            ))} \r\n                            \r\n                        </div> \r\n                    </div>\r\n                :\r\n                    <div></div>\r\n                }\r\n                {((created === true) && (song1 !== null) && (song2 !== null)) ?\r\n                    <Link to=\"/\">\r\n                        <button className=\"btn btn-success\" onClick={() => exportPlaylist()}>Export to Spotify</button>\r\n                    </Link>\r\n                :\r\n                    <div></div>\r\n                }\r\n                \r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forms;","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function useAuth(code) {\r\n    const [accessToken, setAccessToken] = useState();\r\n    const [refreshToken, setRefreshToken] = useState();\r\n    const [expiresIn, setExpiresIn] = useState();\r\n\r\n    useEffect(() => {\r\n        axios\r\n        .post(`${process.env.PORT}/login`, {\r\n            code\r\n        })\r\n        .then(res => {\r\n            console.log(res.data);\r\n            setAccessToken(res.data.accessToken);\r\n            setRefreshToken(res.data.refreshToken);\r\n            setExpiresIn(res.data.expiresIn);\r\n            window.history.pushState({}, null, \"/\");\r\n        })\r\n        .catch(() => {\r\n            console.log(\"Error\");\r\n        })\r\n    }, [code])\r\n\r\n    useEffect(() => {\r\n        if (!refreshToken || !expiresIn) {\r\n            return;\r\n        }\r\n        axios\r\n        .post(`${process.env.PORT}/refresh`, {\r\n            refreshToken,\r\n        })\r\n        .then(res => {\r\n            setAccessToken(res.data.accessToken);\r\n            setExpiresIn(res.data.expiresIn);\r\n            window.history.pushState({}, null, \"/\");\r\n        })\r\n        .catch(() => {\r\n            return\r\n        })\r\n    }, [refreshToken, expiresIn])\r\n\r\n    return accessToken;\r\n}\r\n\r\n\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport LandingPage from './components/LandingPage';\nimport Forms from './components/Forms';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\nconst code = new URLSearchParams(window.location.search).get('code');\n\nfunction App() {\n  return (\n    <Router>\n        <Routes>\n          <Route path=\"/\" element={code ? <Forms code={code} /> : <LandingPage />}></Route>\n        </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}